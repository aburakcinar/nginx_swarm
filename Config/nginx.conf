##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
worker_processes  4;  ## Default: 1

events {
    worker_connections  1024;  ## Default: 1024
}

http {
    index index.html index.htm index.php;

    # Default server configuration
    #
    server {
            listen 80 default_server;
            listen [::]:80 default_server;

            # SSL configuration
            #
            # listen 443 ssl default_server;
            # listen [::]:443 ssl default_server;
            #
            # Note: You should disable gzip for SSL traffic.
            # See: https://bugs.debian.org/773332
            #
            # Read up on ssl_ciphers to ensure a secure configuration.
            # See: https://bugs.debian.org/765782
            #
            # Self signed certs generated by the ssl-cert package
            # Don't use them in a production server!
            #
            # include snippets/snakeoil.conf;

            root /var/www/html;

            # Add index.php to the list if you are using PHP
            index index.html index.htm index.nginx-debian.html;

            server_name _;

            location / {
                    # First attempt to serve request as file, then
                    # as directory, then fall back to displaying a 404.
                    try_files $uri $uri/ =404;
                # proxy_pass http://localhost:8080;
                # proxy_http_version 1.1;
                # proxy_set_header Upgrade $http_upgrade;
                # proxy_set_header Connection 'upgrade';
                # proxy_set_header Host $host;
                # proxy_cache_bypass $http_upgrade;
            }

            # deny access to .htaccess files, if Apache's document root
            # concurs with nginx's one
            #
            #location ~ /\.ht {
            #       deny all;
            #}
    }


    # upstream rcweb_servers {
    #     server http://rcweb:80;
    # }
 

    # Virtual Host configuration for example.com
    #
    # You can move that to a different file under sites-available/ and symlink that
    # to sites-enabled/ to enable it.
    #
    # server {
    #       listen 80;
    #       listen [::]:80;
    
    #       server_name dev.logger.narayan.local;
    
    #       #root /var/www/example.com;
    #       #index index.html;
          
    #     location / {
    #         proxy_pass         http://rcweb/;
    #         proxy_redirect     off;
    #         proxy_set_header   Host $host;
    #         proxy_set_header   X-Real-IP $remote_addr;
    #         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header   X-Forwarded-Host $server_name;
    #     }
    # }

    server{
        listen 443;
        listen [::]:443;

        server_name registry.narayan.local;

        ssl on;
        ssl_certificate /run/secrets/domain.crt;
        ssl_certificate_key /run/secrets/domain.key;

        location / {
            proxy_pass         http://registry:5000/;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}